select * from categories;
ALTER table categories add constraint primary key(Category_ID);

select * from customers;
ALTER table customers add constraint primary key(CustomerID);

select * from employees;
ALTER table employees add constraint primary key(ï»¿Employee_ID);

SELECT * FROM orderdetails;
Alter table orderdetails add constraint primary key (OrderDetailID);

select * from orders;
Alter table orders add constraint primary key(OrderID);

select * from products;
Alter table products add constraint primary key(productID);

select * from shippers;
Alter table shippers add constraint primary key(shipperID);

select * from suppliers;
Alter table suppliers add constraint primary key(supplierID);

ALTER TABLE products
ADD CONSTRAINT fk_products_CategoryID
FOREIGN KEY (CategoryID)
REFERENCES categories(Category_ID);

select productName, price
from products
order by price desc;

select productName, price
from products
order by ProductName
limit 5 offset 5;

SELECT ProductName
FROM products
WHERE price = (
  SELECT MIN(price) 
  FROM products
);

select CustomerName, orders.OrderID, Quantity
from customers
join orders
on customers.CustomerID = orders.CustomerID
join orderdetails
on orderdetails.OrderID = orders. OrderID;

select Orders.orderId, concat(firstName, " " , LastName) as fullName
From orders
join employees
on orders. EmployeeID = employees.Employee_ID;

select CustomerName
from customers
join orders
on customers.CustomerID = orders.CustomerID
where OrderID = '10248';

select orders.OrderID, ProductName 
from orders
join orderdetails
on orders.OrderID = orderdetails.OrderID
join  products
on products. ProductID = orderdetails. ProductID;

select orderdetails.OrderID, ProductName 
from products
left join orderdetails
on products. ProductID = orderdetails.ProductID;

select customerName, orders.OrderID, quantity
from customers
join orders
on customers.CustomerID = orders.CustomerID
join orderdetails
on orderdetails.orderid = orders.orderID
where quantity > 50 ;

-- ANALYSIS QUESTIONS
-- TOTAL NUMBER OF PRODUCTS SOLD
select count(productID) as Total_Product
from products;

-- TOTAL REVENUE
select sum(price) as Total_Revenue
from products;

-- UNIQUE PRODUCT BY CATEGORY
SELECT DISTINCT 
	ProductID,
    ProductName,
    CategoryID,
    Category_Name
FROM products
JOIN categories
ON products.CategoryID = categories.Category_ID;


-- TOTAL PURCHASE
select count(orderID) as Total_Purchase
from orders;

-- TOTAL NO CUSTOMER 
SELECT COUNT(DISTINCT CustomerName) AS TOTAL_CUSTOMER
FROM customers;

-- TOP 5 CUSTOMERS
SELECT distinct ContactName, orders.OrderID, price 
FROM customers
JOIN orders
ON customers.CustomerID = orders.CustomerID
join orderdetails
on orderdetails.OrderID = orders.OrderID
join products
on products.ProductID = orderdetails.ProductID
order by Price desc 
limit  5; 

-- BEST SELLING PRODUCTS
select productNAme, sum(Quantity) as Top_5
from products
join orderdetails
on products.ProductID = orderdetails.ProductID
group by ProductName
order by Top_5 desc
limit 1;


-- TOP 5 BEST SELLING PRODUCTS
select productNAme, sum(Quantity) as Top_5
from products
join orderdetails
on products.ProductID = orderdetails.ProductID
group by ProductName
order by Top_5 desc
limit 5;

-- Transaction values per month
select orderDate,
extract( year FROM ORDERDATE) AS YEAR,
extract( MONTH FROM ORDERDATE) AS MONTH,
extract( DAY FROM ORDERDATE) AS DAY
from orders;

select monthname(orderDate)
from orders;

select orderdate,monthname(orderDate)
from orders;

select distinct monthname(orderdate), sum(price) as month_transaction
from orders
join orderdetails
on orders.OrderID = orderdetails.OrderID
join products
on products.ProductID = orderdetails.ProductID
Where OrderDate >= 2022-01-01 and 2022 -30-01
group by monthname(OrderDate)
order by month_transaction desc;


-- BEST SELLING PRODUCTS CATEGORY

SELECT distinct Category_Name, sum(price) AS total_sales
FROM categories
join products
on categories.Category_ID = products.CategoryID
group by category_name
order by total_sales desc
limit 1;

-- product by category
SELECT distinct Category_Name, sum(price) AS total_sales
FROM categories
join products
on categories.Category_ID = products.CategoryID
group by category_name
order by total_sales desc;

-- customers with more than one transaction
select CustomerName, count(orderID) as highest_order
from customers
join orders
on customers.CustomerID = orders.CustomerID
where OrderID > 1
group by CustomerName
order by highest_order desc;


-- customer with highest order 

select CustomerName, count(orderID) as highest_order
from customers
join orders
on customers.CustomerID = orders.CustomerID
group by CustomerName
order by highest_order desc
limit 1;

-- MOST USE SHIPPER
select ShipperName, count(OrderID)
from shippers
join orders
on shippers.ShipperID = orders.ShipperID
group by shipperName
order by count(OrderID) desc
limit 1 ;

--  SHIPPER USE
select ShipperName, count(OrderID)
from shippers
join orders
on shippers.ShipperID = orders.ShipperID
group by shipperName
order by count(OrderID) desc;


-- MOST USE Supplier
select supplierName ,count(orders.orderID)
from suppliers 
join products
on suppliers.supplierID = products.supplierID
join orderdetails
on products.ProductID = orderdetails.ProductID
join orders
on orders.OrderID = orderdetails.OrderID
group by SupplierName
order by count(orders.orderID) desc
limit 1;

-- TOP 5 Supplier
select supplierName ,count(orders.orderID)
from suppliers 
join products
on suppliers.supplierID = products.supplierID
join orderdetails
on products.ProductID = orderdetails.ProductID
join orders
on orders.OrderID = orderdetails.OrderID
group by SupplierName
order by count(orders.orderID) desc
limit 5;








  





